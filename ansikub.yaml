- hosts: all
  become: yes
  tasks:
  - name: create the 'ric' user
    user: name=ric append=yes state=present createhome=yes shell=/bin/bash groups=sudo append=yes

  - name: allow 'ric' to have passwordless sudo
    lineinfile:
      dest: /etc/sudoers
      line: 'ric ALL=(ALL) NOPASSWD: ALL'
      validate: 'visudo -cf %s'

  - name: create a new directory to hold ssh key
    become: yes
    become_user: ric
    file:
      path: $HOME/.ssh
      state: directory
      mode: 0755

  - name: copy ssh files ds destination
    copy:
      src: id_rsa.pub
      dest: /home/ric/.ssh/id_rsa.pub
      remote_src: false
      owner: ric

  - name: set up authorized keys for the ric user
    authorized_key: user=ric key="{{item}}"
    with_file:
      - /home/ric/.ssh/id_rsa.pub

- hosts: all
  tasks:
  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common

  - name: Add an apt signing key for Docker
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add apt repository for stable version
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
      state: present

  - name: Install docker and its dependecies
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - docker-ce 
      - docker-ce-cli 
      - containerd.io
        #    notify:
        #      - docker status

  - name: Add ric to docker group
    user:
      name: ric
      group: docker
          

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: Install Kubernetes binaries
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubernetes-cni=0.6.0-00
        - kubelet=1.13.1-00
        - kubeadm=1.13.1-00
        - kubectl=1.13.1-00

          #  - name: Configure node ip
          #    lineinfile:
          #      path: /etc/default/kubelet
          #      line: KUBELET_EXTRA_ARGS=--node-ip={{ 82.165.169.240 }}
          #      create: yes 

  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted
  

  - pause: seconds=5
